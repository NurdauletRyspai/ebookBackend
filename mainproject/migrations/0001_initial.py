# Generated by Django 4.1.5 on 2023-02-15 07:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mainproject.Manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('iin', models.IntegerField(db_index=True, unique=True, verbose_name='ИИН')),
                ('first_name', models.CharField(db_index=True, max_length=150, verbose_name='Аты')),
                ('last_name', models.CharField(db_index=True, max_length=150, verbose_name='Тегі')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='Электрондық пошта')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False, verbose_name='Персонал')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'қолданушы',
                'verbose_name_plural': 'Қолданушылар',
                'ordering': ['id'],
            },
            managers=[
                ('objects', mainproject.Manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Кітап аты')),
                ('age', models.DateField(verbose_name='Нешінші жылғы кітап')),
                ('photo', models.ImageField(upload_to='', verbose_name='Кітап фотосы')),
                ('date_add', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'кітап',
                'verbose_name_plural': 'Кітаптар',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_start', models.DateTimeField(auto_now_add=True, verbose_name='Алған уақыты')),
                ('Date_end', models.DateTimeField(auto_now_add=True, verbose_name='Қайтару уақыты')),
                ('commoner', models.BooleanField(default=False, verbose_name='Кешігу(болса)')),
                ('commoner_time', models.DateTimeField(blank=True, null=True, verbose_name='Кешігу уақыты(болса)')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainproject.books', verbose_name='Кітап')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Қолданушы')),
            ],
        ),
    ]
